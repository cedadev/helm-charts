apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-cinder-node-driver-sa
  labels:
{{ include "csi-cinder-driver.labels" . | indent 4 }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-cinder-node-driver-role
  labels:
{{ include "csi-cinder-driver.labels" . | indent 4 }}
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-cinder-node-driver-binding
  labels:
{{ include "csi-cinder-driver.labels" . | indent 4 }}
subjects:
  - kind: ServiceAccount
    name: csi-cinder-node-driver-sa
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: csi-cinder-node-driver-role
  apiGroup: rbac.authorization.k8s.io
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-cinder-node-driver
  labels:
{{ include "csi-cinder-driver.labels" . | indent 4 }}
    component: csi-cinder-node-driver
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "csi-cinder-driver.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: csi-cinder-node-driver
  template:
    metadata:
      annotations:
        checksum/cloud-config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "csi-cinder-driver.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: csi-cinder-node-driver
    spec:
      serviceAccount: csi-cinder-node-driver-sa
      hostNetwork: true
      containers:
        - name: node-driver-registrar
          image: "{{ .Values.csi.nodeDriverRegistrar.image.repository }}:{{ .Values.csi.nodeDriverRegistrar.image.tag }}"
          imagePullPolicy: {{ .Values.csi.nodeDriverRegistrar.image.pullPolicy }}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          lifecycle:
            preStop:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "rm -rf /registration/cinder.csi.openstack.org /registration/cinder.csi.openstack.org-reg.sock"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/cinder.csi.openstack.org/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: cinder-csi-plugin
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          args :
            - /bin/cinder-csi-plugin
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--cloud-config=$(CLOUD_CONFIG)"
            - "--v=5"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/config/cloud.conf
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: pods-probe-dir
              mountPath: /dev
              mountPropagation: "HostToContainer"
            - name: secret-cinderplugin
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/cinder.csi.openstack.org
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
        - name: pods-probe-dir
          hostPath:
            path: /dev
        - name: secret-cinderplugin
          secret:
            secretName: cloud-config
