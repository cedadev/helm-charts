apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "elasticsearch.fullname" . }}
  labels:
{{ include "elasticsearch.labels" . | indent 4 }}
spec:
  serviceName: {{ template "elasticsearch.fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "elasticsearch.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "elasticsearch.labels" . | indent 8 }}
    spec:
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: 300
      initContainers:
        # Fix the permission on the volume - by default, the elasticsearch container runs as 1000:1000
        # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_notes_for_production_use_and_defaults
        - name: fix-the-volume-permission
          image: busybox
          command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
          securityContext:
            privileged: true
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
        # Increase vm.max_map_count to 262144
        # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-prod-mode
        - name: increase-vm-max-map-count
          image: busybox
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
        # Increase the ulimit
        # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_notes_for_production_use_and_defaults
        - name: increase-ulimit
          image: busybox
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: tcp
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: cluster.name
              value: {{ template "elasticsearch.fullname" . }}
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- if gt (int .Values.replicas) 1 }}
            # This tells the elasticsearch node where to connect to other nodes to form a cluster
            - name: discovery.zen.ping.unicast.hosts
              value: "{{ range $i, $e := until (int .Values.replicas) }}{{ if $i }},{{ end }}{{ template "elasticsearch.fullname" $ }}-{{ $i }}.{{ template "elasticsearch.fullname" $ }}.{{ $.Release.Namespace }}.svc.cluster.local{{ end }}"
            {{- else }}
            - name: discovery.type
              value: single-node
            {{- end }}
            - name: ES_JAVA_OPTS
              value: "{{ .Values.javaOptions }}"
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
{{- if not .Values.persistence.enabled }}
      volumes:
        - name: data
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if hasKey .Values.persistence "storageClass" }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.claimSize }}
{{- end }}
