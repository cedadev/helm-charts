# Default values for keycloak-gatekeeper chart

# The discovery URL for the OIDC IdP  
#   E.g. for a Keycloak IdP this would be https://{host}/auth/realms/{realm}
discoveryUrl: ""

# Indicates if TLS verification should be skipped for the OpenID provider
#   Set to true if the provider uses a self-signed certificate or Let's Encrypt staging
providerSkipTlsVerify: false

# The OAuth client ID
clientId: ""

# The OAuth client secret
clientSecret: ""

# The upstream URL, including protocol
#   E.g. to proxy a service in the same namespaces this would be http://{servicename}
upstreamUrl: ""

# The resources to protect, in command-line format
#   See https://www.keycloak.org/docs/latest/securing_apps/index.html#example-usage-and-configuration
protectedResources:
  - uri: "/*"
  # - uri: /admin*
  #   roles: [admin]
  #   groups: [admins]
  # - uri: /public*
  #   white-listed: true

# The encryption key for access token encryption
encryptionKey: ""

# The number of replicas in the deployment
replicaCount: 1

# The Keycloak Gatekeeper image to use
image:
  repository: gogatekeeper/gatekeeper
  tag: 1.5.0
  pullPolicy: IfNotPresent

# Override the name (defaults to chart name)
nameOverride: ""

# Override the fullname (defaults to {release-name}-{name})
fullnameOverride: ""

# The type and port for the service
service:
  type: ClusterIP
  port: 80

# The ingress specification
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # certmanager.k8s.io/cluster-issuer: letsencrypt
    # certmanager.k8s.io/acme-challenge-type: http01
  hosts: []
    # - host: chart-example.local
    #   paths: ["/"]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
